global:
  smtp_smarthost: 'xxxx:25'
  smtp_from: 'xxxx'
  smtp_auth_username: 'xxx'
  smtp_auth_password: 'xxx'
  smtp_require_tls: false

route:
  group_by: [ ... ] # 分组， ... 表示不分组
  group_wait: 60s # 同一组 告警 需要等待多少s才能发出
  group_interval: 5m # 同一组的多批次告警间隔多少秒后，才能发出
  repeat_interval: 1h  # 重复告警要等待多久后才能再次发出去，目的是为了避免重复的消息发送多次
  receiver: 'webhook' # receiver名称，对应 receivers.name

# 配置报警方式
receivers:
  - name: 'webhook'
    webhook_configs:
      - url: 'https://open.feishu.cn/open-apis/bot/v2/hook/your-api-key'

  - name: 'email'
    email_configs:
      - to: 'abc@example.com'

#  - name: 'discord'
#    discord_config:
#      - webhook_url: 'xxxx'
#
#  - name: "slack"
#    slack_configs:
#      - api_url: "https://hooks.slack.com/services/xxxx"
#        channel: "#prometheus"
#        send_resolved: true
#        title: "{{ .CommonAnnotations.summary }}"
#        text: "{{ .CommonAnnotations.description }}"
#
#  - name: "telegram"
#    telegram_configs:
#      - api_url: "https://api.telegram.org/botxxxx/sendMessage"
#        chat_id: "xxxx"
#        title: "{{ .CommonAnnotations.summary }}"
#        text: "{{ .CommonAnnotations.description }}"
#
#  - name: "wechat"
#    wechat_configs:
#      - api_url: "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxxx"
#        title: "{{ .CommonAnnotations.summary }}"
#        text: "{{ .CommonAnnotations.description }}"


# 抑制规则，减少垃圾告警的产生，比如主机挂了，主机上的服务，数据库，中间件等一系列告警 相对来说没有意义，可以通过抑制项这个功能，让Prometheus只发出主机挂了的告警。
# 暂时不用
# inhibit_rules:
#   - source_match:
#       # 匹配的严重级别，向上兼容，warning,critical,emergency，严重等级依次递增。
#       severity: 'critical'
#     target_match:
#       severity: 'warning'
#     equal: ['alertname', 'dev', 'instance'] # 确保这个配置下的标签内容相同才会抑制，也就是说警报中必须有这三个标签值才会被抑制。

